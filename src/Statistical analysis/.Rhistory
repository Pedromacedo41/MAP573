)
load.zoo <- zoo(
x         = TS,
order.by  = timesNAomit,
frequency = 24
)
mean.data <- cbind(load.means.zoo, temperature.means.zoo)
load.means.ts <- ts(TSmeans, start = as.numeric(times[1]), frequency = 24)
head(load.means.ts) #Can be used for lagplots because the time units are not important for that
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
geom_histogram(binwidth = bw)
grid.arrange(p1, p2,  nrow = 2)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, aes(x = load.means.ts) +
p3
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, aes(x = load.means.ts) +
p3
grid.arrange(p1, p2, p3,  nrow = 2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, aes(x = load.means.ts) +
geom_histogram(binwidth = bw)
p3
p3 <- ggplot(load.means.ts, aes(x = load.means.ts) +
hist(load.means.ts)
hist(load.means.ts)
hist(load.means.zoo)
p3 <- ggplot(load.means.zoo, aes(x = load.means.zoo) +
p3
ggplot(load.means.zoo, aes(x = load.means.zoo) +
ggplot(load.means.zoo, aes(x = load.means.zoo) +
ggplot(load.means.zoo, aes(y = load.means.zoo) +
ggplot(load.means.zoo, aes(x = load.means.zoo) +
geom_histogram(bins=60)
ggplot(load.means.zoo, aes(x = load.means.zoo) +
hist(load.means.zoo)
autoplot(load.means.zoo, aes(x = load.means.zoo) +
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
hist(load.means.zoo)
ggplot(load.means.zoo, aes(x = load.means.zoo) +
ggplot(load.means.zoo, aes(x = as.numeric(load.means.zoo)) +
ggplot(as.numeric(load.means.zoo), aes(x = as.numeric(load.means.zoo)) +
ggplot(as.numeric(load.means.zoo), aes(x = as.numeric(load.means.zoo)) +
geom_histogram(bins=60) )
ggplot(as.numeric(load.means.zoo), aes(x = as.numeric(load.means.zoo)) +
ggplot(as.numeric(load.means.zoo), aes(x = as.numeric(load.means.zoo)) +
geom_histogram(bins=60))
ggplot(load.means.zoo, aes(x = load.means.zoo) +
geom_histogram(bins=60))
aes
ggplot(load.means.zoo, aes(x = load.means.zoo) +
geom_histogram(bins=60))
ggplot(load.means.zoo, aes(x = load.means.zoo) +
geom_histogram(bins=60))
ggplot(load.means.zoo, aes(x = load.means.zoo) +
geom_histogram(bins=60))
ggplot(load.means.zoo, aes(x = load.means.zoo) +
geom_histogram(bins=60))
ggplot(load.means.zoo, aes(x = load.means.zoo) +
geom_histogram(bins=60))
ggplot(load.means.ts, aes(x = load.means.ts) +
geom_histogram(bins=60))
ggplot(load.means.ts, aes(x = load.means.ts) +
geom_histogram(bins=60))
ggplot(TSmeans, aes(x = TSmeans) +
geom_histogram(bins=60))
ggplot(TSmeans, aes(x = TSmeans) +
geom_histogram(bins=60))
hist(load.means.zoo)
?hist
p3 <- hist(load.means.zoo, bins = 2)
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- hist(load.means.zoo, bins = 2)
grid.arrange(p1, p2, p3,  nrow = 3)
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- hist(load.means.zoo, bins = 2)
p3
grid.arrange(p1, p2,  nrow = 2)
typeof(load.means.ts)
typeof(load.means.diff)
p2 <- ggplot(load.means.ts, aes(x = load.means.ts) +
p2
p2 <- ggplot(load.means.ts, aes(x = load.means.ts) +
p2 <- ggplot(load.means.ts, aes(x = load.means.ts) +
geom_histogram(binwidth = 100))
p2 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts) +
geom_histogram(binwidth = 100))
p2
ggplot(load.means.ts, mapping = aes_(x = load.means.ts) +
geom_histogram(binwidth = 100))
ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
geom_histogram(binwidth = 100)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
geom_histogram(binwidth = bw)
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3 nrow = 3)
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff),
main = "Average difference with each time step $delta$t"=1) +
p2 <- ggplot(load.means.diff, aes(x = load.means.diff),
main = "Average difference with each time step $$delta$$t"=1) +
p2 <- ggplot(load.means.diff, aes(x = load.means.diff),
main = "Average difference with each time step delta t"=1) +
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Correlation of load and temperature (no units)",
y="Value",
x = "Year")+
geom_histogram(binwidth = bw)
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step delta t = 1",
y="Value",
x = "Year")+
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step "delta" t = 1",
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step ", delta, " t = 1",
y="Value",
x = "Year")+
geom_histogram(binwidth = bw)
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step ", alpha, " t = 1",
y="Value",
x = "Year")+
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff, main = "lla")
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step ",
y="Count",
x = "Difference")+
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
labs(title= "Histogram of load",
y="Count",
x = "Load")+
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff, main = "Difference in time series")
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step ",
y="Count",
x = "Difference")+
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
labs(title= "Histogram of load",
y="Count",
x = "Load")+
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo/1000, colour = "Load")) +
geom_line(aes(y = temperature.means.zoo, colour = "Temperature"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo/1000, colour = "Load")) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))
geom_line(aes(y = temperature.means.zoo, colour = "Temperature"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo/1000, colour = "Load")) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))
geom_line(aes(x = temperature.means.zoo, colour = "Temperature"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo/1000, colour = "Load")) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(x = temperature.means.zoo, colour = "Temperature"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
grid.arrange(p1, p2, nrow = 2)
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo/1000, colour = "Load")) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(y = temperature.means.zoo, colour = "Temperature"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
grid.arrange(p1, p2, nrow = 2)
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo, colour = "Load")) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(y = temperature.means.zoo, colour = "Temperature"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
grid.arrange(p1, p2, nrow = 2)
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo, colour = "blue")) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(y = temperature.means.zoo, colour = "red"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
grid.arrange(p1, p2, nrow = 2)
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo, colour = "Blue")) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(y = temperature.means.zoo, colour = "Red"))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
grid.arrange(p1, p2, nrow = 2)
?geom_line
?ggplot
?labs
?geom_line
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo)) +
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(y = temperature.means.zoo))+
labs(title= "Correlation of load and temperature (no units)",
y="Value", x = "Year")
grid.arrange(p1, p2, nrow = 2)
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo)) +
labs(title= "Correlation of load and temperature (no units)",
y="Load", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(y = temperature.means.zoo))+
labs(y="Temperature", x = "Year")
grid.arrange(p1, p2, nrow = 2)
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff, main = "Difference in time series")
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step ",
y="Count",
x = "Difference")+
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
labs(title= "Histogram of load",
y="Count",
x = "Load")+
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
library(zoo)
library(xts)
times <- as.POSIXct(row.names(data), format = "%Y-%m-%d %H:%M:")
timesNAomit <- na.omit(times)
load.means.zoo <- zoo(
x         = data$TSmeans,
order.by  = timesNAomit,
frequency = 24
)
temperature.means.zoo <- zoo(
x         = data$TSTmeans,
order.by  = timesNAomit,
frequency = 24
)
load.zoo <- zoo(
x         = TS,
order.by  = timesNAomit,
frequency = 24
)
mean.data <- cbind(load.means.zoo, temperature.means.zoo)
load.means.ts <- ts(TSmeans, start = as.numeric(times[1]), frequency = 24)
head(load.means.ts) #Can be used for lagplots because the time units are not important for that
plot(TSTmeans, TSmeans,
main = "Relationship between energy load and temperature",
xlab = "Temperature [F]",
ylab = "Load [xW]",
cex = 0.1,
panel.first = grid(nx = NULL, ny = NULL, col = "red", lty = "dotted"))
library(grid)
library(gridExtra)
library(rmarkdown)
TS <- read.csv("../Data/Complete_TS.csv")
TST <- read.csv("../Data/TST.csv")
row.names(TST) <- TST$datetime
TST = subset(TST, select = -c(X, datetime))
row.names(TS) <- TS$datetime
TS = subset(TS, select = -c(X, datetime))
TSmeans <- rowMeans(TS[1:29414, ])
TSTmeans <- rowMeans(TST[1:29414, ])
mean_temp <- mean(TSTmeans)
data <- as.data.frame(cbind(TSTmeans, TSmeans))
plot(TSTmeans, TSmeans,
main = "Relationship between energy load and temperature",
xlab = "Temperature [F]",
ylab = "Load [xW]",
cex = 0.1,
panel.first = grid(nx = NULL, ny = NULL, col = "red", lty = "dotted"))
library(zoo)
library(xts)
times <- as.POSIXct(row.names(data), format = "%Y-%m-%d %H:%M:")
timesNAomit <- na.omit(times)
load.means.zoo <- zoo(
x         = data$TSmeans,
order.by  = timesNAomit,
frequency = 24
)
temperature.means.zoo <- zoo(
x         = data$TSTmeans,
order.by  = timesNAomit,
frequency = 24
)
load.zoo <- zoo(
x         = TS,
order.by  = timesNAomit,
frequency = 24
)
mean.data <- cbind(load.means.zoo, temperature.means.zoo)
load.means.ts <- ts(TSmeans, start = as.numeric(times[1]), frequency = 24)
head(load.means.ts) #Can be used for lagplots because the time units are not important for that
library(ggplot2)
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff, main = "Difference in time series")
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step ",
y="Count",
x = "Difference")+
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
labs(title= "Histogram of load",
y="Count",
x = "Load")+
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
p1 <- ggplot(mean.data, aes(timesNAomit)) +
geom_line(aes(y = load.means.zoo)) +
labs(title= "Correlation of load and temperature (no units)",
y="Load", x = "Year")
p2 <- ggplot(mean.data, aes(timesNAomit))+
geom_line(aes(y = temperature.means.zoo))+
labs(y="Temperature", x = "Year")
grid.arrange(p1, p2, nrow = 2)
library(forecast)
p1 <- ggAcf(load.means.ts)
p2 <- ggAcf(load.means.ts, lag.max = 24*35)
grid.arrange(p1, p2, nrow = 2)
p1 <- ggAcf(load.means.ts, type = "partial")
p2 <- ggAcf(load.means.ts, type = "partial", lag.max = 24*7)
p3 <- ggAcf(load.means.ts, type = "partial", lag.max = 24*7*4)
grid.arrange(p1, p2, p3,  ncol = 2, layout_matrix = rbind(c(1,2), c(3,3)))
p1 <- autoplot(load.means.zoo[1:24], main="24 hours from baseline")
p2 <- autoplot(load.means.zoo[1:24*7], main="week from baseline")
p3 <- autoplot(load.means.zoo[1:24*7*4], main="month from baseline")
grid.arrange(p1, p2, p3,  ncol = 2, layout_matrix = rbind(c(1,2), c(3,3)))
N_obs <- 31*24*5
D <- matrix(data=NA,nrow=N_obs,ncol=12)
colnames(D) <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
years = c("2004-", "2005-", "2006-", "2007-", "2008-", "2009-") #2009 ekki í datasetti
months = c("01-", "02-", "03-", "04-", "05-", "06-", "07-", "08-", "09-", "10-", "11-", "12-", "01-")
MaxIndex <- 1
for (y in 1:5){
year <- years[y]
for (m in 1:12){
MaxIndex_month <- 1
month <- months[m]
nextmonth <- months[m+1]
if (m == 12)
{
nextyear <- years[y+1]
temp_start <-  paste(c(year, month, "01"), collapse = "")
temp_end  <-  paste(c(nextyear, nextmonth, "01"), collapse = "")
}
else{
temp_start <-  paste(c(year, month, "01"), collapse = "")
temp_end  <-  paste(c(year, nextmonth, "01"), collapse = "")
}
sDay <- temp_start
eDay <-temp_end
monthData <- coredata(window(load.means.zoo, start = as.POSIXct(sDay), end = as.POSIXct(eDay)))
lengthMonth <- length(monthData)
D[MaxIndex:(MaxIndex+lengthMonth-1),m] <-monthData[1:lengthMonth]
if (lengthMonth > MaxIndex_month) {MaxIndex_month <- lengthMonth}
}
MaxIndex <- MaxIndex_month + MaxIndex
}
#Now boxplot with D
boxplot(D,
main = "Average energy load over the zones vs months",
na.action = NULL,
xlab = "Months",
ylab = "Energy load",
col = "orange",
border = "black")
library(Rfast)
mins <- colMins(D)
maxs <- colMaxs(D)
minmaxData <- cbind(mins,maxs)
row.names(minmaxData) <- colnames(D)
barplot(t(minmaxData), col=c("Blue","Red"), legend = c("Min load", "Max load"),
main = "Min-max load per month",
ylab = "Energy load")
library(zoo)
library(xts)
library(ggplot2)
times <- as.POSIXct(row.names(data), format = "%Y-%m-%d %H:%M:")
timesNAomit <- na.omit(times)
load.means.zoo <- zoo(
x         = data$TSmeans,
order.by  = timesNAomit,
frequency = 24
)
temperature.means.zoo <- zoo(
x         = data$TSTmeans,
order.by  = timesNAomit,
frequency = 24
)
load.zoo <- zoo(
x         = TS,
order.by  = timesNAomit,
frequency = 24
)
mean.data <- cbind(load.means.zoo, temperature.means.zoo)
load.means.ts <- ts(TSmeans, start = as.numeric(times[1]), frequency = 24)
head(load.means.ts) #Can be used for lagplots because the time units are not important for that
load.means.diff <- diff(load.means.ts)
bw <- 2 * IQR(load.means.diff) / length(load.means.diff)^(1/3) #Freedman-Diaconis rule
p1 <- autoplot(load.means.diff, main = "Difference in time series")
p2 <- ggplot(load.means.diff, aes(x = load.means.diff)) +
labs(title= "Difference between each time step ",
y="Count",
x = "Difference")+
geom_histogram(binwidth = bw)
bw <- 2 * IQR(load.means.ts) / length(load.means.ts)^(1/3) #Freedman-Diaconis rule
p3 <- ggplot(load.means.ts, mapping = aes(x = load.means.ts)) +
labs(title= "Histogram of load",
y="Count",
x = "Load")+
geom_histogram(binwidth = bw)
grid.arrange(p1, p2, p3, nrow = 3)
