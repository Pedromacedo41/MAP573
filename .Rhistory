model  %>% predict(reshape_X_3d(test_matrix))
n_timesteps <- 50
n_predictions <- n_timesteps
test_matrix <- build_matrix(g, n_timesteps + n_predictions)
model  %>% predict(reshape_X_3d(test_matrix))
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[2], dim(X)[1], 1)
X
}
test_matrix <- build_matrix(g, n_timesteps + n_predictions)
model  %>% predict(reshape_X_3d(test_matrix))
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[1], dim(X)[2], 1)
X
}
test_matrix <- build_matrix(g, n_timesteps + n_predictions)
model  %>% predict(reshape_X_3d(test_matrix))
model  %>% predict(t(reshape_X_3d(test_matrix)))
model  %>% predict(reshape_X_3d(t(test_matrix)))
model  %>% predict(reshape_X_3d(test_matrix))
?sapply
window <-100
test_matrix <- build_matrix(g, window)
View((test_matrix))
library(keras)
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[1], dim(X)[2], 1)
X
}
g <- reshape_X_3d(g)
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
window <-100
test_matrix <- build_matrix(g, window)
model  %>% predict(reshape_X_3d(test_matrix))
build_matrix <- function(tseries, overall_timesteps) {
(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
test_matrix <- build_matrix(g, window)
model  %>% predict(reshape_X_3d(test_matrix))
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
window <-100
test_matrix <- build_matrix(g, window)
model  %>% predict(reshape_X_3d(test_matrix))
reshape_X_3d <- function(X) {
dim(X) <- c(1,dim(X)[1], dim(X)[2])
X
}
library(keras)
model <- load_model_hdf5("./Data/Models/lstm_1h_window100.h5")
model  %>% predict(reshape_X_3d(test_matrix))
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[1], dim(X)[2],1)
X
}
View(reshape_X_3d(test_matrix))
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[1],1, dim(X)[2])
X
}
View(reshape_X_3d(test_matrix))
model  %>% predict(reshape_X_3d(test_matrix))
g <- as.numeric(load_table$V2)
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
window <-100
test_matrix <- build_matrix(g, window)
model  %>% predict(reshape_X_3d(test_matrix))
data <- model  %>% predict(reshape_X_3d(test_matrix))
write.csv(data, file = "./Data/MyData.csv")
runApp('RVis')
g <- normalize(as.numeric(load_table$V2))
g <-as.numeric(load_table$V2)
h <-as.numeric(load_table$V2)
g <-  normalize(h)
print(h[1]/g[1])
print(h[1])
print(g[1])
h <-as.numeric(load_table$V2)
g <-  normalize(h)
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[1],1, dim(X)[2])
X
}
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
window <-100
test_matrix <- build_matrix(g, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
write.csv(data*(max(h)-min(h))+min(h), file = "./Data/MyData.csv")
View(data*(max(h)-min(h))+min(h))
h <-as.numeric(load_table$V2)
g <-  normalize(h)
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
window <-100
test_matrix <- build_matrix(g, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data*(max(h)-min(h))+min(h))
write.csv(data*(max(h)-min(h))+min(h), file = "./Data/MyData.csv")
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp()
runApp()
runApp('RVis')
runApp()
runApp()
runApp('RVis')
write.csv(data*(max(h)-min(h))+min(h), file = "./Data/MyData.csv")
xd5= t(fread("./Data/MyData.csv", sep=","))
xd5= data.frame(xd5)
View(xd5)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data)
View(data*(max(h)-min(h))+min(h))
View(data*(max(h)-min(h)))
View(data)
xd5= t(fread("./Data/MyData.csv", sep=","))
write.csv(data*1000, file = "./Data/MyData.csv")
xd5= t(fread("./Data/MyData.csv", sep=","))
xd5= data.frame(xd5)
View(xd5)
xd5= t(fread("./Data/MyData.csv", sep=","))
View(xd5)
View(data)
View(data$V1)
write.csv(data*1000, file = "./Data/MyData.csv")
xd5= t(fread("./Data/MyData.csv", sep=","))
View(xd5)
write.csv(data[1:length(data),1]*1000, file = "./Data/MyData.csv")
xd5= t(fread("./Data/MyData.csv", sep=","))
View(data[1])
View(data[,1])
write.csv(data[,1]*1000, file = "./Data/MyData.csv")
xd5= t(fread("./Data/MyData.csv", sep=","))
xd5= data.frame(xd5)
View(xd5$x)
xd5= data.frame(t(xd5))
xd5= t(fread("./Data/MyData.csv", sep=","))
xd5= data.frame(t(xd5))
View(xd5$x)
runApp('RVis')
runApp('RVis')
write.csv(data[,1]*(max(h)-min(h))+min(h), file = "./Data/MyData.csv")
runApp('RVis')
runApp('RVis')
runApp('RVis')
TS= fread("./Data/Complete_TS.csv", sep=",")
load_table= data.frame(TS)
h <-as.numeric(load_table$V2)
g <-  normalize(h)
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
window <-100
test_matrix <- build_matrix(g, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data[,1])
h <-as.numeric(load_table$V2)
g <- h
test_matrix <- build_matrix(g, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data[,1])
write.csv(data[,1]*(max(h)-min(h))+min(h), file = "./Data/MyData.csv")
View(data[,1]*(max(h)-min(h))+min(h))
h <-as.numeric(load_table$V2)
g <- normalize(h)
test_matrix <- build_matrix(g, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data[,1]*(max(h)-min(h)))
View(data[,1]*(max(h)-min(h))+min((h)))
test_matrix <- build_matrix(g[30000:35000], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data[,1]*(max(h)-min(h))+min((h)))
write.csv(data[,1]*2500, file = "./Data/MyData.csv")
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
?normalize
h <-as.numeric(load_table$V2)
g <- normalize(h, order = 2)
test_matrix <- build_matrix(g[30000:35000], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data[,1]*(max(h)-min(h))+min((h)))
write.csv(data[,1]*1000, file = "./Data/MyData.csv")
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
View(load_table$V2)
h <-as.numeric(load_table$V2)
View(h)
g <- (h-min(h))/(max(h)-min(h))
View(g)
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
window <-100
test_matrix <- build_matrix(g[30000:35000], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data[,1]*(max(h)-min(h))+min((h)))
View(data[,1]*(max(h)-min(h))+min((h)))
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[1], dim(X)[2], 1)
X
}
window <-100
test_matrix <- build_matrix(g[30000:35000], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
build_matrix <- function(tseries, overall_timesteps) {
build_matrix <- function(tseries, overall_timesteps) {
sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)])
}
test_matrix <- build_matrix(g[30000:35000], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
window <-100
test_matrix <- build_matrix(g[30000:35000], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
build_matrix <- function(tseries, overall_timesteps) {
t(sapply(1:(length(tseries) - overall_timesteps + 1),
function(x) tseries[x:(x + overall_timesteps - 1)]))
}
reshape_X_3d <- function(X) {
print(dim(X))
dim(X) <- c(dim(X)[1], dim(X)[2], 1)
X
}
test_matrix <- build_matrix(g[30000:35000], window)
reshape_X_3d(test_matrix)
data <- model  %>% predict(test_matrix)
reshape_X_3d <- function(X) {
print(dim(X))
dim(X) <- c(1,dim(X)[1], dim(X)[2])
X
}
data <- model  %>% predict(reshape_X_3d(test_matrix))
reshape_X_3d <- function(X) {
print(dim(X))
dim(X) <- c(dim(X)[1],1, dim(X)[2])
X
}
data <- model  %>% predict(reshape_X_3d(test_matrix))
reshape_X_3d <- function(X) {
dim(X) <- c(dim(X)[1],1, dim(X)[2])
X
}
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data[,1]*(max(h)-min(h))+min((h)))
write.csv(data[,1]*(max(h)-min(h))+min((h)), file = "./Data/MyData.csv")
runApp('RVis')
runApp('RVis')
runApp('RVis')
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data)
test_matrix <- build_matrix(g[30000:30100], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data)
test_matrix <- build_matrix(g[30000:30099], window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
View(data)
reshape_X_3d <- function(X) {
print(dim(X))
dim(X) <- c(dim(X)[1],1, dim(X)[2])
X
}
data <- model  %>% predict(reshape_X_3d(test_matrix))
wi <- g[30000:30099]
test_matrix <- build_matrix(wi, window)
wi <- g[30000:30099]
View(wi)
f <- 14
wi <- cbind(wi[2:length(wi)], c(f))
view(wi)
window <-100
wi <- g[30000:30099]
View(wi)
f <- 14
wi <- rbind(wi[2:length(wi)], c(f))
f <- 14
wi <- rbind(wi[2:length(wi)], c(f))
view(wi)
wi <- g[30000:30099]
wi[1: (length(wi)-1)] <- wi[2:length(wi)]
wi[length(wi)] =f
view(wi)
View(data)
window <-100
wi <- g[30000:30099]
as <-c()
window <-100
wi <- g[30000:30099]
for(i in 1:24){
test_matrix <- build_matrix(wi, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
as <- c(as,data[1,1])
wi[1: (length(wi)-1)] <- wi[2:length(wi)]
wi[length(wi)] =data[1,1]
}
View(as)
View(as*(max(h)-min(h))+min((h)))
write.csv(as*(max(h)-min(h))+min((h)), file = "./Data/MyData2.csv")
xd6= t(fread("./../Data/MyData2.csv", sep=","))
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
View(as*(max(h)-min(h))+min((h)))
runApp('RVis')
runApp('RVis')
write.csv(as*(max(h)-min(h))+min((h)), file = "./Data/MyData2.csv")
runApp('RVis')
runApp('RVis')
as <-c()
for(i in 1:300){
test_matrix <- build_matrix(wi, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
as <- c(as,data[1,1])
wi[1: (length(wi)-1)] <- wi[2:length(wi)]
wi[length(wi)] =data[1,1]
}
View(as*(max(h)-min(h))+min((h)))
window <-100
wi <- g[30000:30099]
as <-c()
for(i in 1:300){
test_matrix <- build_matrix(wi, window)
data <- model  %>% predict(reshape_X_3d(test_matrix))
as <- c(as,data[1,1])
wi[1: (length(wi)-1)] <- wi[2:length(wi)]
wi[length(wi)] =data[1,1]
}
View(as*(max(h)-min(h))+min((h)))
write.csv(as*(max(h)-min(h))+min((h)), file = "./Data/MyData2.csv")
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp()
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp()
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
model <- load_model_hdf5("./Data/Models/lstm_1h_window100.h5")
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp()
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
runApp('RVis')
